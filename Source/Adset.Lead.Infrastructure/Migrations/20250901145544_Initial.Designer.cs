// <auto-generated />
using System;
using Adset.Lead.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adset.Lead.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250901145544_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Adset.Lead.Domain.Automobiles.Automobile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Features")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Km")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Photos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Brand")
                        .HasDatabaseName("IX_Automobiles_Brand");

                    b.HasIndex("Color")
                        .HasDatabaseName("IX_Automobiles_Color");

                    b.HasIndex("Model")
                        .HasDatabaseName("IX_Automobiles_Model");

                    b.HasIndex("Plate")
                        .IsUnique()
                        .HasDatabaseName("IX_Automobiles_Plate");

                    b.HasIndex("Price")
                        .HasDatabaseName("IX_Automobiles_Price");

                    b.HasIndex("Year")
                        .HasDatabaseName("IX_Automobiles_Year");

                    b.HasIndex("Brand", "Model")
                        .HasDatabaseName("IX_Automobiles_Brand_Model");

                    b.ToTable("Automobiles", (string)null);
                });

            modelBuilder.Entity("Adset.Lead.Domain.Automobiles.PortalPackage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AutomobileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Package")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Portal")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AutomobileId")
                        .IsUnique()
                        .HasDatabaseName("IX_PortalPackages_AutomobileId");

                    b.HasIndex("Portal")
                        .HasDatabaseName("IX_PortalPackages_Portal");

                    b.HasIndex("AutomobileId", "Portal")
                        .IsUnique()
                        .HasDatabaseName("IX_PortalPackages_AutomobileId_Portal");

                    b.ToTable("PortalPackages", (string)null);
                });

            modelBuilder.Entity("Adset.Lead.Domain.Automobiles.PortalPackage", b =>
                {
                    b.HasOne("Adset.Lead.Domain.Automobiles.Automobile", null)
                        .WithOne("PortalPackage")
                        .HasForeignKey("Adset.Lead.Domain.Automobiles.PortalPackage", "AutomobileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Adset.Lead.Domain.Automobiles.Automobile", b =>
                {
                    b.Navigation("PortalPackage");
                });
#pragma warning restore 612, 618
        }
    }
}
